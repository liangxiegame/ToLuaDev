{
	"scope": "source.lua",
	"completions":
	[
		"local Rect = UnityEngine.Rect",
		"Rect = UnityEngine.Rect",
		"UnityEngine.Rect.__eq()",
		"UnityEngine.Rect.__tostring()",
		"UnityEngine.Rect.x",
		"rect.x",
		"UnityEngine.Rect.y",
		"rect.y",
		"UnityEngine.Rect.position",
		"rect.position",
		"UnityEngine.Rect.center",
		"rect.center",
		"UnityEngine.Rect.min",
		"rect.min",
		"UnityEngine.Rect.max",
		"rect.max",
		"UnityEngine.Rect.width",
		"rect.width",
		"UnityEngine.Rect.height",
		"rect.height",
		"UnityEngine.Rect.size",
		"rect.size",
		"UnityEngine.Rect.xMin",
		"rect.xMin",
		"UnityEngine.Rect.yMin",
		"rect.yMin",
		"UnityEngine.Rect.xMax",
		"rect.xMax",
		"UnityEngine.Rect.yMax",
		"rect.yMax",
		{ "trigger": "UnityEngine.Rect.New()","contents": "UnityEngine.Rect.New()"},
		{ "trigger": "Rect.New()","contents": "Rect.New()"},
		"UnityEngine.Rect.MinMaxRect",
		{ "trigger": "UnityEngine.Rect.MinMaxRect(System.Single:xmin,System.Single:ymin,System.Single:xmax,System.Single:ymax)","contents": "UnityEngine.Rect.MinMaxRect(${1:System.Single:xmin},${2:System.Single:ymin},${3:System.Single:xmax},${4:System.Single:ymax})"},
		{ "trigger": "Rect.MinMaxRect(System.Single:xmin,System.Single:ymin,System.Single:xmax,System.Single:ymax)","contents": "Rect.MinMaxRect(${1:System.Single:xmin},${2:System.Single:ymin},${3:System.Single:xmax},${4:System.Single:ymax})"},
		"UnityEngine.Rect.Set",
		{ "trigger": "UnityEngine.Rect.Set(System.Single:x,System.Single:y,System.Single:width,System.Single:height)","contents": "UnityEngine.Rect.Set(${1:System.Single:x},${2:System.Single:y},${3:System.Single:width},${4:System.Single:height})"},
		{ "trigger": ":Set(System.Single:x,System.Single:y,System.Single:width,System.Single:height)","contents": "Set(${1:System.Single:x},${2:System.Single:y},${3:System.Single:width},${4:System.Single:height})"},
		{ "trigger": "rect:Set(System.Single:x,System.Single:y,System.Single:width,System.Single:height)","contents": "rect:Set(${1:System.Single:x},${2:System.Single:y},${3:System.Single:width},${4:System.Single:height})"},
		"UnityEngine.Rect.ToString",
		{ "trigger": "UnityEngine.Rect.ToString()","contents": "UnityEngine.Rect.ToString()"},
		{ "trigger": ":ToString()","contents": "ToString()"},
		{ "trigger": "rect:ToString()","contents": "rect:ToString()"},
		"UnityEngine.Rect.ToString",
		{ "trigger": "UnityEngine.Rect.ToString(System.String:format)","contents": "UnityEngine.Rect.ToString(${1:System.String:format})"},
		{ "trigger": ":ToString(System.String:format)","contents": "ToString(${1:System.String:format})"},
		{ "trigger": "rect:ToString(System.String:format)","contents": "rect:ToString(${1:System.String:format})"},
		"UnityEngine.Rect.Contains",
		{ "trigger": "UnityEngine.Rect.Contains(UnityEngine.Vector2:point)","contents": "UnityEngine.Rect.Contains(${1:UnityEngine.Vector2:point})"},
		{ "trigger": ":Contains(UnityEngine.Vector2:point)","contents": "Contains(${1:UnityEngine.Vector2:point})"},
		{ "trigger": "rect:Contains(UnityEngine.Vector2:point)","contents": "rect:Contains(${1:UnityEngine.Vector2:point})"},
		"UnityEngine.Rect.Contains",
		{ "trigger": "UnityEngine.Rect.Contains(UnityEngine.Vector3:point)","contents": "UnityEngine.Rect.Contains(${1:UnityEngine.Vector3:point})"},
		{ "trigger": ":Contains(UnityEngine.Vector3:point)","contents": "Contains(${1:UnityEngine.Vector3:point})"},
		{ "trigger": "rect:Contains(UnityEngine.Vector3:point)","contents": "rect:Contains(${1:UnityEngine.Vector3:point})"},
		"UnityEngine.Rect.Contains",
		{ "trigger": "UnityEngine.Rect.Contains(UnityEngine.Vector3:point,System.Boolean:allowInverse)","contents": "UnityEngine.Rect.Contains(${1:UnityEngine.Vector3:point},${2:System.Boolean:allowInverse})"},
		{ "trigger": ":Contains(UnityEngine.Vector3:point,System.Boolean:allowInverse)","contents": "Contains(${1:UnityEngine.Vector3:point},${2:System.Boolean:allowInverse})"},
		{ "trigger": "rect:Contains(UnityEngine.Vector3:point,System.Boolean:allowInverse)","contents": "rect:Contains(${1:UnityEngine.Vector3:point},${2:System.Boolean:allowInverse})"},
		"UnityEngine.Rect.Overlaps",
		{ "trigger": "UnityEngine.Rect.Overlaps(UnityEngine.Rect:other)","contents": "UnityEngine.Rect.Overlaps(${1:UnityEngine.Rect:other})"},
		{ "trigger": ":Overlaps(UnityEngine.Rect:other)","contents": "Overlaps(${1:UnityEngine.Rect:other})"},
		{ "trigger": "rect:Overlaps(UnityEngine.Rect:other)","contents": "rect:Overlaps(${1:UnityEngine.Rect:other})"},
		"UnityEngine.Rect.Overlaps",
		{ "trigger": "UnityEngine.Rect.Overlaps(UnityEngine.Rect:other,System.Boolean:allowInverse)","contents": "UnityEngine.Rect.Overlaps(${1:UnityEngine.Rect:other},${2:System.Boolean:allowInverse})"},
		{ "trigger": ":Overlaps(UnityEngine.Rect:other,System.Boolean:allowInverse)","contents": "Overlaps(${1:UnityEngine.Rect:other},${2:System.Boolean:allowInverse})"},
		{ "trigger": "rect:Overlaps(UnityEngine.Rect:other,System.Boolean:allowInverse)","contents": "rect:Overlaps(${1:UnityEngine.Rect:other},${2:System.Boolean:allowInverse})"},
		"UnityEngine.Rect.NormalizedToPoint",
		{ "trigger": "UnityEngine.Rect.NormalizedToPoint(UnityEngine.Rect:rectangle,UnityEngine.Vector2:normalizedRectCoordinates)","contents": "UnityEngine.Rect.NormalizedToPoint(${1:UnityEngine.Rect:rectangle},${2:UnityEngine.Vector2:normalizedRectCoordinates})"},
		{ "trigger": "Rect.NormalizedToPoint(UnityEngine.Rect:rectangle,UnityEngine.Vector2:normalizedRectCoordinates)","contents": "Rect.NormalizedToPoint(${1:UnityEngine.Rect:rectangle},${2:UnityEngine.Vector2:normalizedRectCoordinates})"},
		"UnityEngine.Rect.PointToNormalized",
		{ "trigger": "UnityEngine.Rect.PointToNormalized(UnityEngine.Rect:rectangle,UnityEngine.Vector2:point)","contents": "UnityEngine.Rect.PointToNormalized(${1:UnityEngine.Rect:rectangle},${2:UnityEngine.Vector2:point})"},
		{ "trigger": "Rect.PointToNormalized(UnityEngine.Rect:rectangle,UnityEngine.Vector2:point)","contents": "Rect.PointToNormalized(${1:UnityEngine.Rect:rectangle},${2:UnityEngine.Vector2:point})"},
		"UnityEngine.Rect.GetHashCode",
		{ "trigger": "UnityEngine.Rect.GetHashCode()","contents": "UnityEngine.Rect.GetHashCode()"},
		{ "trigger": ":GetHashCode()","contents": "GetHashCode()"},
		{ "trigger": "rect:GetHashCode()","contents": "rect:GetHashCode()"},
		"UnityEngine.Rect.Equals",
		{ "trigger": "UnityEngine.Rect.Equals(System.Object:other)","contents": "UnityEngine.Rect.Equals(${1:System.Object:other})"},
		{ "trigger": ":Equals(System.Object:other)","contents": "Equals(${1:System.Object:other})"},
		{ "trigger": "rect:Equals(System.Object:other)","contents": "rect:Equals(${1:System.Object:other})"},
		"UnityEngine.Rect.op_Equality",
		{ "trigger": "UnityEngine.Rect.op_Equality(UnityEngine.Rect:lhs,UnityEngine.Rect:rhs)","contents": "UnityEngine.Rect.op_Equality(${1:UnityEngine.Rect:lhs},${2:UnityEngine.Rect:rhs})"},
		{ "trigger": "Rect.op_Equality(UnityEngine.Rect:lhs,UnityEngine.Rect:rhs)","contents": "Rect.op_Equality(${1:UnityEngine.Rect:lhs},${2:UnityEngine.Rect:rhs})"},
	]
}

