{
	"scope": "source.lua",
	"completions":
	[
		"local AnimationState = UnityEngine.AnimationState",
		"AnimationState = UnityEngine.AnimationState",
		"UnityEngine.AnimationState.__eq()",
		"UnityEngine.AnimationState.__tostring()",
		"UnityEngine.AnimationState.enabled",
		"animationState.enabled",
		"UnityEngine.AnimationState.weight",
		"animationState.weight",
		"UnityEngine.AnimationState.wrapMode",
		"animationState.wrapMode",
		"UnityEngine.AnimationState.time",
		"animationState.time",
		"UnityEngine.AnimationState.normalizedTime",
		"animationState.normalizedTime",
		"UnityEngine.AnimationState.speed",
		"animationState.speed",
		"UnityEngine.AnimationState.normalizedSpeed",
		"animationState.normalizedSpeed",
		"UnityEngine.AnimationState.length",
		"animationState.length",
		"UnityEngine.AnimationState.layer",
		"animationState.layer",
		"UnityEngine.AnimationState.clip",
		"animationState.clip",
		"UnityEngine.AnimationState.name",
		"animationState.name",
		"UnityEngine.AnimationState.blendMode",
		"animationState.blendMode",
		{ "trigger": "UnityEngine.AnimationState.New()","contents": "UnityEngine.AnimationState.New()"},
		{ "trigger": "AnimationState.New()","contents": "AnimationState.New()"},
		"UnityEngine.AnimationState.AddMixingTransform",
		{ "trigger": "UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform:mix,System.Boolean:recursive)","contents": "UnityEngine.AnimationState.AddMixingTransform(${1:UnityEngine.Transform:mix},${2:System.Boolean:recursive})"},
		{ "trigger": ":AddMixingTransform(UnityEngine.Transform:mix,System.Boolean:recursive)","contents": "AddMixingTransform(${1:UnityEngine.Transform:mix},${2:System.Boolean:recursive})"},
		{ "trigger": "animationState:AddMixingTransform(UnityEngine.Transform:mix,System.Boolean:recursive)","contents": "animationState:AddMixingTransform(${1:UnityEngine.Transform:mix},${2:System.Boolean:recursive})"},
		"UnityEngine.AnimationState.AddMixingTransform",
		{ "trigger": "UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform:mix)","contents": "UnityEngine.AnimationState.AddMixingTransform(${1:UnityEngine.Transform:mix})"},
		{ "trigger": ":AddMixingTransform(UnityEngine.Transform:mix)","contents": "AddMixingTransform(${1:UnityEngine.Transform:mix})"},
		{ "trigger": "animationState:AddMixingTransform(UnityEngine.Transform:mix)","contents": "animationState:AddMixingTransform(${1:UnityEngine.Transform:mix})"},
		"UnityEngine.AnimationState.RemoveMixingTransform",
		{ "trigger": "UnityEngine.AnimationState.RemoveMixingTransform(UnityEngine.Transform:mix)","contents": "UnityEngine.AnimationState.RemoveMixingTransform(${1:UnityEngine.Transform:mix})"},
		{ "trigger": ":RemoveMixingTransform(UnityEngine.Transform:mix)","contents": "RemoveMixingTransform(${1:UnityEngine.Transform:mix})"},
		{ "trigger": "animationState:RemoveMixingTransform(UnityEngine.Transform:mix)","contents": "animationState:RemoveMixingTransform(${1:UnityEngine.Transform:mix})"},
		"UnityEngine.AnimationState.op_Equality",
		{ "trigger": "UnityEngine.AnimationState.op_Equality(UnityEngine.TrackedReference:x,UnityEngine.TrackedReference:y)","contents": "UnityEngine.AnimationState.op_Equality(${1:UnityEngine.TrackedReference:x},${2:UnityEngine.TrackedReference:y})"},
		{ "trigger": "AnimationState.op_Equality(UnityEngine.TrackedReference:x,UnityEngine.TrackedReference:y)","contents": "AnimationState.op_Equality(${1:UnityEngine.TrackedReference:x},${2:UnityEngine.TrackedReference:y})"},
	]
}

