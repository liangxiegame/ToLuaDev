{
	"scope": "source.lua",
	"completions":
	[
		"local ParticleSystem = UnityEngine.ParticleSystem",
		"ParticleSystem = UnityEngine.ParticleSystem",
		"UnityEngine.ParticleSystem.__eq()",
		"UnityEngine.ParticleSystem.__tostring()",
		"UnityEngine.ParticleSystem.startDelay",
		"particleSystem.startDelay",
		"UnityEngine.ParticleSystem.isPlaying",
		"particleSystem.isPlaying",
		"UnityEngine.ParticleSystem.isStopped",
		"particleSystem.isStopped",
		"UnityEngine.ParticleSystem.isPaused",
		"particleSystem.isPaused",
		"UnityEngine.ParticleSystem.loop",
		"particleSystem.loop",
		"UnityEngine.ParticleSystem.playOnAwake",
		"particleSystem.playOnAwake",
		"UnityEngine.ParticleSystem.time",
		"particleSystem.time",
		"UnityEngine.ParticleSystem.duration",
		"particleSystem.duration",
		"UnityEngine.ParticleSystem.playbackSpeed",
		"particleSystem.playbackSpeed",
		"UnityEngine.ParticleSystem.particleCount",
		"particleSystem.particleCount",
		"UnityEngine.ParticleSystem.startSpeed",
		"particleSystem.startSpeed",
		"UnityEngine.ParticleSystem.startSize",
		"particleSystem.startSize",
		"UnityEngine.ParticleSystem.startColor",
		"particleSystem.startColor",
		"UnityEngine.ParticleSystem.startRotation",
		"particleSystem.startRotation",
		"UnityEngine.ParticleSystem.startRotation3D",
		"particleSystem.startRotation3D",
		"UnityEngine.ParticleSystem.startLifetime",
		"particleSystem.startLifetime",
		"UnityEngine.ParticleSystem.gravityModifier",
		"particleSystem.gravityModifier",
		"UnityEngine.ParticleSystem.maxParticles",
		"particleSystem.maxParticles",
		"UnityEngine.ParticleSystem.simulationSpace",
		"particleSystem.simulationSpace",
		"UnityEngine.ParticleSystem.scalingMode",
		"particleSystem.scalingMode",
		"UnityEngine.ParticleSystem.randomSeed",
		"particleSystem.randomSeed",
		"UnityEngine.ParticleSystem.useAutoRandomSeed",
		"particleSystem.useAutoRandomSeed",
		"UnityEngine.ParticleSystem.emission",
		"particleSystem.emission",
		"UnityEngine.ParticleSystem.shape",
		"particleSystem.shape",
		"UnityEngine.ParticleSystem.velocityOverLifetime",
		"particleSystem.velocityOverLifetime",
		"UnityEngine.ParticleSystem.limitVelocityOverLifetime",
		"particleSystem.limitVelocityOverLifetime",
		"UnityEngine.ParticleSystem.inheritVelocity",
		"particleSystem.inheritVelocity",
		"UnityEngine.ParticleSystem.forceOverLifetime",
		"particleSystem.forceOverLifetime",
		"UnityEngine.ParticleSystem.colorOverLifetime",
		"particleSystem.colorOverLifetime",
		"UnityEngine.ParticleSystem.colorBySpeed",
		"particleSystem.colorBySpeed",
		"UnityEngine.ParticleSystem.sizeOverLifetime",
		"particleSystem.sizeOverLifetime",
		"UnityEngine.ParticleSystem.sizeBySpeed",
		"particleSystem.sizeBySpeed",
		"UnityEngine.ParticleSystem.rotationOverLifetime",
		"particleSystem.rotationOverLifetime",
		"UnityEngine.ParticleSystem.rotationBySpeed",
		"particleSystem.rotationBySpeed",
		"UnityEngine.ParticleSystem.externalForces",
		"particleSystem.externalForces",
		"UnityEngine.ParticleSystem.collision",
		"particleSystem.collision",
		"UnityEngine.ParticleSystem.trigger",
		"particleSystem.trigger",
		"UnityEngine.ParticleSystem.subEmitters",
		"particleSystem.subEmitters",
		"UnityEngine.ParticleSystem.textureSheetAnimation",
		"particleSystem.textureSheetAnimation",
		{ "trigger": "UnityEngine.ParticleSystem.New()","contents": "UnityEngine.ParticleSystem.New()"},
		{ "trigger": "ParticleSystem.New()","contents": "ParticleSystem.New()"},
		"UnityEngine.ParticleSystem.SetParticles",
		{ "trigger": "UnityEngine.ParticleSystem.SetParticles(UnityEngine.ParticleSystem+Particle[]:particles,System.Int32:size)","contents": "UnityEngine.ParticleSystem.SetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles},${2:System.Int32:size})"},
		{ "trigger": ":SetParticles(UnityEngine.ParticleSystem+Particle[]:particles,System.Int32:size)","contents": "SetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles},${2:System.Int32:size})"},
		{ "trigger": "particleSystem:SetParticles(UnityEngine.ParticleSystem+Particle[]:particles,System.Int32:size)","contents": "particleSystem:SetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles},${2:System.Int32:size})"},
		"UnityEngine.ParticleSystem.GetParticles",
		{ "trigger": "UnityEngine.ParticleSystem.GetParticles(UnityEngine.ParticleSystem+Particle[]:particles)","contents": "UnityEngine.ParticleSystem.GetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles})"},
		{ "trigger": ":GetParticles(UnityEngine.ParticleSystem+Particle[]:particles)","contents": "GetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles})"},
		{ "trigger": "particleSystem:GetParticles(UnityEngine.ParticleSystem+Particle[]:particles)","contents": "particleSystem:GetParticles(${1:UnityEngine.ParticleSystem+Particle[]:particles})"},
		"UnityEngine.ParticleSystem.Simulate",
		{ "trigger": "UnityEngine.ParticleSystem.Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart)","contents": "UnityEngine.ParticleSystem.Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart})"},
		{ "trigger": ":Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart)","contents": "Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart})"},
		{ "trigger": "particleSystem:Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart)","contents": "particleSystem:Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart})"},
		"UnityEngine.ParticleSystem.Simulate",
		{ "trigger": "UnityEngine.ParticleSystem.Simulate(System.Single:t,System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.Simulate(${1:System.Single:t},${2:System.Boolean:withChildren})"},
		{ "trigger": ":Simulate(System.Single:t,System.Boolean:withChildren)","contents": "Simulate(${1:System.Single:t},${2:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:Simulate(System.Single:t,System.Boolean:withChildren)","contents": "particleSystem:Simulate(${1:System.Single:t},${2:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.Simulate",
		{ "trigger": "UnityEngine.ParticleSystem.Simulate(System.Single:t)","contents": "UnityEngine.ParticleSystem.Simulate(${1:System.Single:t})"},
		{ "trigger": ":Simulate(System.Single:t)","contents": "Simulate(${1:System.Single:t})"},
		{ "trigger": "particleSystem:Simulate(System.Single:t)","contents": "particleSystem:Simulate(${1:System.Single:t})"},
		"UnityEngine.ParticleSystem.Simulate",
		{ "trigger": "UnityEngine.ParticleSystem.Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart,System.Boolean:fixedTimeStep)","contents": "UnityEngine.ParticleSystem.Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart},${4:System.Boolean:fixedTimeStep})"},
		{ "trigger": ":Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart,System.Boolean:fixedTimeStep)","contents": "Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart},${4:System.Boolean:fixedTimeStep})"},
		{ "trigger": "particleSystem:Simulate(System.Single:t,System.Boolean:withChildren,System.Boolean:restart,System.Boolean:fixedTimeStep)","contents": "particleSystem:Simulate(${1:System.Single:t},${2:System.Boolean:withChildren},${3:System.Boolean:restart},${4:System.Boolean:fixedTimeStep})"},
		"UnityEngine.ParticleSystem.Play",
		{ "trigger": "UnityEngine.ParticleSystem.Play()","contents": "UnityEngine.ParticleSystem.Play()"},
		{ "trigger": ":Play()","contents": "Play()"},
		{ "trigger": "particleSystem:Play()","contents": "particleSystem:Play()"},
		"UnityEngine.ParticleSystem.Play",
		{ "trigger": "UnityEngine.ParticleSystem.Play(System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.Play(${1:System.Boolean:withChildren})"},
		{ "trigger": ":Play(System.Boolean:withChildren)","contents": "Play(${1:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:Play(System.Boolean:withChildren)","contents": "particleSystem:Play(${1:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.Stop",
		{ "trigger": "UnityEngine.ParticleSystem.Stop()","contents": "UnityEngine.ParticleSystem.Stop()"},
		{ "trigger": ":Stop()","contents": "Stop()"},
		{ "trigger": "particleSystem:Stop()","contents": "particleSystem:Stop()"},
		"UnityEngine.ParticleSystem.Stop",
		{ "trigger": "UnityEngine.ParticleSystem.Stop(System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.Stop(${1:System.Boolean:withChildren})"},
		{ "trigger": ":Stop(System.Boolean:withChildren)","contents": "Stop(${1:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:Stop(System.Boolean:withChildren)","contents": "particleSystem:Stop(${1:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.Pause",
		{ "trigger": "UnityEngine.ParticleSystem.Pause()","contents": "UnityEngine.ParticleSystem.Pause()"},
		{ "trigger": ":Pause()","contents": "Pause()"},
		{ "trigger": "particleSystem:Pause()","contents": "particleSystem:Pause()"},
		"UnityEngine.ParticleSystem.Pause",
		{ "trigger": "UnityEngine.ParticleSystem.Pause(System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.Pause(${1:System.Boolean:withChildren})"},
		{ "trigger": ":Pause(System.Boolean:withChildren)","contents": "Pause(${1:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:Pause(System.Boolean:withChildren)","contents": "particleSystem:Pause(${1:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.Clear",
		{ "trigger": "UnityEngine.ParticleSystem.Clear()","contents": "UnityEngine.ParticleSystem.Clear()"},
		{ "trigger": ":Clear()","contents": "Clear()"},
		{ "trigger": "particleSystem:Clear()","contents": "particleSystem:Clear()"},
		"UnityEngine.ParticleSystem.Clear",
		{ "trigger": "UnityEngine.ParticleSystem.Clear(System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.Clear(${1:System.Boolean:withChildren})"},
		{ "trigger": ":Clear(System.Boolean:withChildren)","contents": "Clear(${1:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:Clear(System.Boolean:withChildren)","contents": "particleSystem:Clear(${1:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.IsAlive",
		{ "trigger": "UnityEngine.ParticleSystem.IsAlive()","contents": "UnityEngine.ParticleSystem.IsAlive()"},
		{ "trigger": ":IsAlive()","contents": "IsAlive()"},
		{ "trigger": "particleSystem:IsAlive()","contents": "particleSystem:IsAlive()"},
		"UnityEngine.ParticleSystem.IsAlive",
		{ "trigger": "UnityEngine.ParticleSystem.IsAlive(System.Boolean:withChildren)","contents": "UnityEngine.ParticleSystem.IsAlive(${1:System.Boolean:withChildren})"},
		{ "trigger": ":IsAlive(System.Boolean:withChildren)","contents": "IsAlive(${1:System.Boolean:withChildren})"},
		{ "trigger": "particleSystem:IsAlive(System.Boolean:withChildren)","contents": "particleSystem:IsAlive(${1:System.Boolean:withChildren})"},
		"UnityEngine.ParticleSystem.Emit",
		{ "trigger": "UnityEngine.ParticleSystem.Emit(System.Int32:count)","contents": "UnityEngine.ParticleSystem.Emit(${1:System.Int32:count})"},
		{ "trigger": ":Emit(System.Int32:count)","contents": "Emit(${1:System.Int32:count})"},
		{ "trigger": "particleSystem:Emit(System.Int32:count)","contents": "particleSystem:Emit(${1:System.Int32:count})"},
		"UnityEngine.ParticleSystem.Emit",
		{ "trigger": "UnityEngine.ParticleSystem.Emit(UnityEngine.ParticleSystem+EmitParams:emitParams,System.Int32:count)","contents": "UnityEngine.ParticleSystem.Emit(${1:UnityEngine.ParticleSystem+EmitParams:emitParams},${2:System.Int32:count})"},
		{ "trigger": ":Emit(UnityEngine.ParticleSystem+EmitParams:emitParams,System.Int32:count)","contents": "Emit(${1:UnityEngine.ParticleSystem+EmitParams:emitParams},${2:System.Int32:count})"},
		{ "trigger": "particleSystem:Emit(UnityEngine.ParticleSystem+EmitParams:emitParams,System.Int32:count)","contents": "particleSystem:Emit(${1:UnityEngine.ParticleSystem+EmitParams:emitParams},${2:System.Int32:count})"},
		"UnityEngine.ParticleSystem.op_Equality",
		{ "trigger": "UnityEngine.ParticleSystem.op_Equality(UnityEngine.Object:x,UnityEngine.Object:y)","contents": "UnityEngine.ParticleSystem.op_Equality(${1:UnityEngine.Object:x},${2:UnityEngine.Object:y})"},
		{ "trigger": "ParticleSystem.op_Equality(UnityEngine.Object:x,UnityEngine.Object:y)","contents": "ParticleSystem.op_Equality(${1:UnityEngine.Object:x},${2:UnityEngine.Object:y})"},
	]
}

